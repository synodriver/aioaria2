{"name":"Aioaria2","tagline":"An async/await wrapper around aria2-json-rpc","body":"提供aria2异步客户端的包\r\n===\r\n\r\n# 本模块提供与aria2异步通信的客户端与管理aria2进程的服务端\r\n[pypi](https://pypi.org/project/aioaria2/)\r\n## 使用方法：\r\n### 示例如下\r\n```python\r\nimport aioaria2\r\nimport asyncio\r\nfrom pprint import pprint\r\nasync def main():\r\n    async with aioaria2.Aria2HttpClient(\"id\", \"http://192.168.0.107:6800/jsonrpc\", \"normal\",\r\n                                        token=\"admin\") as client:\r\n        pprint(await client.getVersion())\r\nasyncio.run(main())\r\n```\r\n### 相关ip地址应该换成自己的 \r\n### client对象的相关方法见aria2手册 \r\n```python\r\nimport aioaria2\r\nimport asyncio\r\nfrom pprint import pprint\r\nasync def main():\r\n    async with aioaria2.Aria2HttpClient(\"id\", \"http://192.168.0.107:6800/jsonrpc\", \"normal\",\r\n                                        token=\"admin\") as client:\r\n        pprint(await client.addUri([\"http://www.demo.com\"])) #即可下载\r\nasyncio.run(main())\r\n```\r\n    运行该协程函数即可，方法对应aria2jsonrpc的方法\r\n    对于服务端，每一个实例对应一个aria2进程\r\n```python\r\nimport aioaria2\r\nimport asyncio\r\nasync def main():\r\n    server = aioaria2.AsyncAria2Server(r\"128aria2c.exe\",\r\n                                       r\"--conf-path=aria2.conf\", \"--rpc-secret=admin\", daemon=True)\r\n    await server.start()\r\n    await server.wait()\r\nasyncio.run(main())\r\n```\r\n#### 即可启动一个aria2进程\r\n[参考选项及设置](http://aria2.github.io/manual/en/html/)\r\n### todolist\r\n- [x] 异步http通信\r\n- [x] 异步websocket通信\r\n- [x] 修复server类的bug\r\n- [ ] 单元测试\r\n\r\n\r\n[jsonrpc](https://xyne.archlinux.ca/projects/python3-aria2jsonrpc)\r\n        本模块在其之上构建，提供了异步支持，以级websocket支持\r\n\r\n### windows用户应该加上以下设置     \r\n```\r\nasyncio.set_event_loop_policy(asyncio.WindowsProactorEventLoopPolicy())\r\nasyncio.set_event_loop(asyncio.ProactorEventLoop())\r\n```\r\n#### Notice\r\n#### 在最终v1.0发布之前不建议直接setup安装\r\n\r\n![title](https://konachan.com/sample/c7f565c0cd96e58908bc852dd754f61a/Konachan.com%20-%20302356%20sample.jpg)","note":"Don't delete this file! It's used internally to help with page regeneration."}